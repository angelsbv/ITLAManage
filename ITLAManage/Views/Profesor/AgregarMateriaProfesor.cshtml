@model ITLAManage.Models.DetalleProfesorAsignatura
@using ITLAManage.Models
@{
    ViewBag.Title = "Agregar Materia a Profesor";
}

<h2>Agregar Materia a Profesor</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @{
        if (ViewBag.IDProfesor != null)
        {
            int IDProfesor = ViewBag.IDProfesor;

            using (var bd = new ManageITLAContext())
            {
                var prof = bd.Profesores.Find(IDProfesor);
                <h4>@prof.Nombre @prof.Apellido </h4>

            }
        }
        else
        {
            using (var bd = new ManageITLAContext())
            {
                var prof = bd.Profesores.Find(Model.IDProfesor);
                <h4>@prof.Nombre @prof.Apellido </h4>
            }
        }
        }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group" style="display:none;">
        <div class="col-md-4">
            <input class="form-control" name="IDProfesor" value="@(ViewBag.IDProfesor != null ? ViewBag.IDProfesor : Model.IDProfesor)" />
            @Html.ValidationMessageFor(model => model.IDProfesor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-1">Asignatura</label>
        <div class="col-md-4">
            @Html.Action("AsignaturasList", "Profesor")

            @{
                if (ViewBag.Msg == "Este profesor ya tiene esta materia.")
                {
                    <small class="text-muted text-danger">  @ViewBag.Msg</small>
                }
            }

            @Html.ValidationMessageFor(model => model.IDAsignatura, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-1">Cuatrimestre</label>
        <div class="col-md-4">
            @Html.EditorFor(model => model.Cuatrimestre, new { htmlAttributes = new { @class = "form-control inputCuat", title = "Ejemplo: 2020-C1" } })
            @Html.ValidationMessageFor(model => model.Cuatrimestre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-4">
            <input type="submit" value="Agregar" class="btn btn-primary btnForm col-md-12" title="No puede dejar campos vacíos." disabled />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Volver atras", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        document.querySelectorAll('#IDAsignatura')
            .forEach(i => {
                i.addEventListener("click", (e) => {
                    var small = e.target.parentNode.querySelector("small");
                    if (small != null)
                        small.remove(small);
                });
            });

        document.querySelector('.inputCuat')
            .addEventListener('keyup', (e) => {
                var cuatVal = document.querySelector('.inputCuat').value;
                cuatVal = cuatVal.replace(/\s/g, "");

                if (cuatVal.length == 0) {
                    document.querySelector('.btnForm').disabled = true;
                    document.querySelector('.btnForm').title = "No puede dejar campos vacíos.";
                }
                else {
                    document.querySelector('.btnForm').disabled = false;
                    document.querySelector('.btnForm').title = "";
                }
            });

    </script>
}
